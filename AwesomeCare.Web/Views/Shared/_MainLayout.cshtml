@using AwesomeCare.Web.Components;
@using Microsoft.AspNetCore.Http;
<!doctype html>
<html lang="en">

<head>
    <title>@ViewData["Title"] - Cuidado</title>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0">
    <meta name="description" content="Cuidado Staff Portal">
    <meta name="author" content="WrapTheme, design by: Akinnagbe Olamide">

    <link rel="icon" href="favicon.ico" type="image/x-icon">
    <!-- VENDOR CSS -->
    <link rel="stylesheet" href="/assets/vendor/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/vendor/font-awesome/css/font-awesome.min.css">

    @RenderSection("VenderStyleSheets", required: false)


    @RenderSection("HeaderScripts", required: false)

    <!-- MAIN CSS -->
    <link rel="stylesheet" href="/assets/css/main.css">
    <link rel="stylesheet" href="/assets/css/color_skins.css">
</head>
<body class="theme-cyan layout-fullwidth">

    <!-- Page Loader -->
    <div class="page-loader-wrapper">
        <div class="loader">
            <div class="m-t-30"><img src="/assets/images/logo-icon.svg" width="48" height="48" alt="Lucid"></div>
            <p>Please wait...</p>
        </div>
    </div>
    <!-- Overlay For Sidebars -->

    <div id="wrapper">

        @await Component.InvokeAsync(nameof(Menu))

        <div id="main-content">
            <div class="container-fluid">
                <div class="block-header">
                    <div class="row">
                        <div class="col-lg-6 col-md-8 col-sm-12">
                            <h2><a href="javascript:void(0);" class="btn btn-xs btn-link btn-toggle-fullwidth"><i class="fa fa-arrow-right"></i></a> @ViewData["Title"]</h2>
                            <breadcrumb></breadcrumb>
                        </div>

                    </div>
                </div>

                @if (this.OperationStatus() != null)
                {

                    var operationStatus = this.OperationStatus();
                    if (operationStatus.IsSuccessful)
                    {
                        <div class="alert alert-success alert-dismissible" role="alert">
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <i class="fa fa-check-circle"></i> @operationStatus.Message
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-danger alert-dismissible" role="alert">
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <i class="fa fa-times-circle"></i>  @operationStatus.Message
                        </div>
                    }
                }
                @RenderBody()
            </div>
        </div>
    </div>

    <!-- Javascript -->
    <script src="/assets/bundles/libscripts.bundle.js"></script>
    <script src="/assets/bundles/vendorscripts.bundle.js"></script>

    <script src="/assets/bundles/mainscripts.bundle.js"></script>

    @RenderSection("VendorScripts", required: false)


    @RenderSection("Scripts", required: false)
</body>
</html>


@using AwesomeCare.DataTransferObject.DTOs.Dashboard;
@model GetDashboard
@{
    ViewData["Title"] = "Dashboard";
}
<div class="row clearfix">
    <div class="col-lg-6 col-md-12">
        <div class="row clearfix">
            <div class="col-lg-12 col-md-6">
                <div class="card top_counter">
                    <div class="body">
                        <div id="top_counter1" class="carousel vert slide" data-ride="carousel" data-interval="2500">
                            <div class="carousel-inner">
                                <div class="carousel-item active">
                                    <div class="icon"><i class="fa fa-user"></i> </div>
                                    <div class="content">
                                        <div class="text">Active Service Users</div>
                                        <h5 class="number">@Model.ActiveUser</h5>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <hr>
                        <div id="top_counter2" class="carousel vert slide" data-ride="carousel" data-interval="2100">
                            <div class="carousel-inner">
                                <div class="carousel-item active">
                                    <div class="icon"><i class="fa fa-user-md"></i> </div>
                                    <div class="content">
                                        <div class="text">Approved staff</div>
                                        <h5 class="number">@Model.ApprovedStaff</h5>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-12 col-md-6">
                <div class="card top_counter">
                    <div class="body">
                        <div id="top_counter3" class="carousel vert slide" data-ride="carousel" data-interval="2300">
                            <div class="carousel-inner">
                                <div class="carousel-item active">
                                    <div class="icon"><i class="fa fa-eye"></i> </div>
                                    <div class="content">
                                        <div class="text">Total Visit</div>
                                        <h5 class="number"></h5>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <hr>
                        <div class="icon"><i class="fa fa-university"></i> </div>
                        <div class="content">
                            <div class="text">Revenue</div>
                            <h5 class="number"></h5>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-6 col-md-6">
                <div class="card top_counter">
                    <div class="body">
                        <div class="icon"><i class="fa fa-thumbs-o-up"></i> </div>
                        <div class="content">
                            <div class="text">Service Watch</div>
                            <h5 class="number"></h5>
                        </div>
                    </div>
                </div>

            </div>
            <div class="col-lg-6 col-md-6">
                <div class="card top_counter">
                    <div class="body">
                        <div class="icon"><i class="fa fa-smile-o"></i> </div>
                        <div class="content">
                            <div class="text">Top Rated Staffs</div>
                            <h5 class="number"></h5>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
    <div class="col-lg-6 col-md-12">
        <div class="card">
            <div class="header">
                <h3>ADL Tracker</h3>
                <ul class="header-dropdown nav nav-tabs-new2">
                    <li class="nav-item"><a class="tab_btn nav-link active show" data-toggle="tab" href="#Daily">D</a></li>
                    <li class="nav-item"><a class="tab_btn nav-link" data-toggle="tab" href="#Weekly">W</a></li>
                    <li class="nav-item"><a class="tab_btn nav-link" data-toggle="tab" href="#Monthly">M</a></li>
                </ul>
            </div>
            <div class="body">
                <div class="tab-content">
                    <div class="tab-pane show active" id="Daily">
                        <canvas id="AdlDaily" style="height:500px;"></canvas>
                    </div>
                    <div class="tab-pane" id="Weekly">
                        <canvas id="AdlWeekly" style="height:500px;"></canvas>
                    </div>
                    <div class="tab-pane" id="Monthly">
                        <canvas id="AdlTracker" style="height:500px;"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row clearfix">
    <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12">
        <div class="card">
            <div class="header">
                <h3>Birthday</h3>
                <ul class="header-dropdown nav nav-tabs-new2">
                    <li class="nav-item"><a class="nav-link active show" data-toggle="tab" href="#Client">Clients</a></li>
                    <li class="nav-item"><a class="nav-link" data-toggle="tab" href="#Staff">Staff</a></li>
                    <li class="nav-item"><a class="nav-link" data-toggle="tab" href="#Special">Special</a></li>
                </ul>
            </div>
            <div class="body">
                <div class="tab-content">
                    <div class="tab-pane" id="Client">
                        <table class="table m-b-0 datatables">
                            <thead class="thead-dark">
                                <tr>
                                    <th>Image</th>
                                    <th>Name</th>
                                    <th>Birth</th>

                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.GetClients)
                                {
                                    <tr>
                                        <td><img src="@item.PassportFilePath" width="150" height="100" /></td>
                                        <td>@item.Firstname</td>
                                        <td>@item.DateOfBirth</td>

                                    </tr>

                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="tab-pane" id="Staff">
                        <table class="table m-b-0 datatables">
                            <thead class="thead-dark">
                                <tr>
                                    <th>Image</th>
                                    <th>Name</th>
                                    <th>Birth</th>
                                    <th>Rota Team</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.GetStaffPersonalInfos)
                                {
                                    <tr>

                                        <td><img src="@item.ProfilePix" width="150" height="100" /></td>
                                        <td>@item.FirstName</td>
                                        <td>@item.DateOfBirth</td>
                                        <td>@item.WorkTeam</td>
                                    </tr>

                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="tab-pane show active" id="Special">

                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12">
        <div class="card">
            <div class="header">
                <div class="row">
                    <div class="form-group col-lg-9 col-md-9 col-sm-9 col-xs-12">
                        <h3>Tele Health</h3>
                    </div>

                    <div class="form-group col-lg-3 col-md-3 col-sm-3 col-xs-12">
                        <a href="javascript:void(0);" id="showmore">Show / Less</a>
                    </div>
                </div>
            </div>
            <div class="body" id="parent">
                <div class="row">
                    <div class="chart-container col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <canvas id="Tele" style="height:500px;"></canvas>
                    </div>
                </div>
                <div class="row padding-25">
                    <div class="chart-container col-lg-3 col-md-3 col-sm-6 col-xs-12">
                        <div class="form-group align-center">
                            <img src="../assets/images/TeleHealthIcon/Coag.png" class="" width="20" height="20" /> <br />
                            <span>Blood Coagulation</span>
                        </div>
                        <canvas id="Coag"></canvas>
                    </div>
                    <div class="chart-container col-lg-3 col-md-3 col-sm-6 col-xs-12">
                        <div class="form-group align-center">
                            <img src="../assets/images/TeleHealthIcon/Pressure.png" class="" width="20" height="20" /> <br />
                            <span>Blood Pressure</span>
                        </div>
                        <canvas id="Pressure"></canvas>
                    </div>
                    <div class="chart-container col-lg-3 col-md-3 col-sm-6 col-xs-12">
                        <div class="form-group align-center">
                            <img src="../assets/images/TeleHealthIcon/Body.png" class="" width="20" height="20" /> <br />
                            <span>Body Temperature</span>
                        </div>
                        <canvas id="BodyTemp"></canvas>
                    </div>
                    <div class="chart-container col-lg-3 col-md-3 col-sm-6 col-xs-12">
                        <div class="form-group align-center">
                            <img src="../assets/images/TeleHealthIcon/Bowel.png" class="" width="20" height="20" /> <br />
                            <span>Bowel Movement</span>
                        </div>
                        <canvas id="Bowel"></canvas>
                    </div>
                </div>
                <div class="row padding-25">
                    <div class="chart-container col-lg-3 col-md-3 col-sm-6 col-xs-12">
                        <div class="form-group align-center">
                            <img src="../assets/images/TeleHealthIcon/BMI.png" class="" width="20" height="20" /> <br />
                            <span>BMI</span>
                            <br />
                        </div>
                        <canvas id="BMI"></canvas>
                    </div>
                    <div class="chart-container col-lg-3 col-md-3 col-sm-6 col-xs-12">
                        <div class="form-group align-center">
                            <img src="../assets/images/TeleHealthIcon/Eye.png" class="" width="20" height="20" /> <br />
                            <span>Eye Health</span>
                        </div>
                        <canvas id="Eye"></canvas>
                    </div>
                    <div class="chart-container col-lg-3 col-md-3 col-sm-6 col-xs-12">
                        <div class="form-group align-center">
                            <img src="../assets/images/TeleHealthIcon/Food.png" class="" width="20" height="20" /> <br />
                            <span>Food Intake</span>
                        </div>
                        <canvas id="Food"></canvas>
                    </div>
                    <div class="chart-container col-lg-3 col-md-3 col-sm-6 col-xs-12">
                        <div class="form-group align-center">
                            <img src="../assets/images/TeleHealthIcon/Heart.png" class="" width="20" height="20" /> <br />
                            <span>Heart Rate</span>
                        </div>
                        <canvas id="Heart"></canvas>
                    </div>
                </div>
                <div class="row padding-25">
                    <div class="chart-container col-lg-3 col-md-3 col-sm-6 col-xs-12">
                        <div class="form-group align-center">
                            <img src="../assets/images/TeleHealthIcon/Oxygen.png" class="" width="20" height="20" /> <br />
                            <span>Oxygen</span>
                        </div>
                        <canvas id="Oxygen"></canvas>
                    </div>
                    <div class="chart-container col-lg-3 col-md-3 col-sm-6 col-xs-12">
                        <div class="form-group align-center">
                            <img src="../assets/images/TeleHealthIcon/Pain.png" class="" width="20" height="20" /> <br />
                            <span>Pain Monitor</span>
                        </div>
                        <canvas id="Pain"></canvas>
                    </div>
                    <div class="chart-container col-lg-3 col-md-3 col-sm-6 col-xs-12">
                        <div class="form-group align-center">
                            <img src="../assets/images/TeleHealthIcon/Pulse.png" class="" width="20" height="20" /> <br />
                            <span>Pulse Rate</span>
                        </div>
                        <canvas id="Pulse"></canvas>
                    </div>

                    <div class="chart-container col-lg-3 col-md-3 col-sm-6 col-xs-12">
                        <div class="form-group align-center">
                            <img src="../assets/images/TeleHealthIcon/Wound.png" class="" width="20" height="20" /> <br />
                            <span>Wound Care</span>
                        </div>
                        <canvas id="Wound"></canvas>
                    </div>
                </div>
                <div class="row padding-25">
                    <div class="chart-container col-lg-3 col-md-3 col-sm-6 col-xs-12">
                        <div class="form-group align-center">
                            <img src="../assets/images/TeleHealthIcon/Seizure.png" class="" width="20" height="20" /> <br />
                            <span>Seizure Monitor</span>
                        </div>
                        <canvas id="Seizure"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="card">
            <div class="header">
                <div class="row">
                    <div class="form-group col-lg-9 col-md-9 col-sm-9 col-xs-12">
                        <h3>Client Metrics</h3>
                    </div>

                    <div class="form-group col-lg-3 col-md-3 col-sm-3 col-xs-12">
                        <a href="javascript:void(0);" id="clientshow">Show / Less</a>
                    </div>
                </div>
            </div>
            <div class="body" id="clientParent">
                <div class="row">
                    <div class="chart-container col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <canvas id="ClientMetrics" style="height:500px;"></canvas>
                    </div>
                </div>
                <div class="row padding-25">
                    <div class="chart-container col-lg-3 col-md-3 col-sm-6 col-xs-12">
                        <div class="form-group align-center">
                            @*<img src="../assets/images/TeleHealthIcon/Coag.png" class="" width="50" height="50" />*@
                            <br /><span>Log Audit</span>

                        </div>
                        <canvas id="LogAudit"></canvas>
                    </div>
                    <div class="chart-container col-lg-3 col-md-3 col-sm-6 col-xs-12">
                        <div class="form-group align-center">
                            @*<img src="../assets/images/TeleHealthIcon/Pressure.png" class="" width="50" height="50" />*@
                            <br /><span>Med Audit</span>

                        </div>
                        <canvas id="MedAudit"></canvas>
                    </div>
                    <div class="chart-container col-lg-3 col-md-3 col-sm-6 col-xs-12">
                        <div class="form-group align-center">
                            @*<img src="../assets/images/TeleHealthIcon/BMI.png" class="" width="50" height="50" />*@
                            <br /><span>Complain</span>

                        </div>
                        <canvas id="Complain"></canvas>
                    </div>
                    <div class="chart-container col-lg-3 col-md-3 col-sm-6 col-xs-12">
                        <div class="form-group align-center">
                            @*<img src="../assets/images/TeleHealthIcon/Body.png" class="" width="50" height="50" />*@
                            <br /><span>Voice</span>

                        </div>
                        <canvas id="Voice"></canvas>
                    </div>
                </div>
                <div class="row padding-25">
                    <div class="chart-container col-lg-3 col-md-3 col-sm-6 col-xs-12">
                        <div class="form-group align-center">
                            @*<img src="../assets/images/TeleHealthIcon/Coag.png" class="" width="50" height="50" />*@
                            <br /><span>Mgt Visit</span>

                        </div>
                        <canvas id="MgtVisit"></canvas>
                    </div>
                    <div class="chart-container col-lg-3 col-md-3 col-sm-6 col-xs-12">
                        <div class="form-group align-center">
                            @*<img src="../assets/images/TeleHealthIcon/Pressure.png" class="" width="50" height="50" />*@
                            <br /><span>Program</span>

                        </div>
                        <canvas id="Program"></canvas>
                    </div>
                    <div class="chart-container col-lg-3 col-md-3 col-sm-6 col-xs-12">
                        <div class="form-group align-center">
                            @*<img src="../assets/images/TeleHealthIcon/BMI.png" class="" width="50" height="50" />*@
                            <br /><span>Service Watch</span>

                        </div>
                        <canvas id="ServiceWatch"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="card">
            <div class="header">
                <div class="row">
                    <div class="form-group col-lg-9 col-md-9 col-sm-9 col-xs-12">
                        <h3>Staff Metrics</h3>
                    </div>

                    <div class="form-group col-lg-3 col-md-3 col-sm-3 col-xs-12">
                        <a href="javascript:void(0);" id="staffshow">Show / Less</a>
                    </div>
                </div>
            </div>
            <div class="body" id="staffParent">

                <div class="row">
                    <div class="chart-container col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <canvas id="StaffMetrics" style="height:500px;"></canvas>
                    </div>
                </div>
                <div class="row padding-25">
                    <div class="chart-container col-lg-3 col-md-3 col-sm-6 col-xs-12">
                        <div class="form-group align-center">
                            @*<img src="../assets/images/TeleHealthIcon/Coag.png" class="" width="50" height="50" />*@
                            <br /><span>Adl Obs</span>

                        </div>
                        <canvas id="Adl"></canvas>
                    </div>
                    <div class="chart-container col-lg-3 col-md-3 col-sm-6 col-xs-12">
                        <div class="form-group align-center">
                            @*<img src="../assets/images/TeleHealthIcon/Pressure.png" class="" width="50" height="50" />*@
                            <br /><span>Key Worker</span>

                        </div>
                        <canvas id="Key"></canvas>
                    </div>
                    <div class="chart-container col-lg-3 col-md-3 col-sm-6 col-xs-12">
                        <div class="form-group align-center">
                            @*<img src="../assets/images/TeleHealthIcon/BMI.png" class="" width="50" height="50" />*@
                            <br /><span>Med Comp</span>

                        </div>
                        <canvas id="Med"></canvas>
                    </div>
                    <div class="chart-container col-lg-3 col-md-3 col-sm-6 col-xs-12">
                        <div class="form-group align-center">
                            @*<img src="../assets/images/TeleHealthIcon/Body.png" class="" width="50" height="50" />*@
                            <br /><span>One To One</span>

                        </div>
                        <canvas id="One"></canvas>
                    </div>
                </div>
                <div class="row padding-25">
                    <div class="chart-container col-lg-3 col-md-3 col-sm-6 col-xs-12">
                        <div class="form-group align-center">
                            @*<img src="../assets/images/TeleHealthIcon/Coag.png" class="" width="50" height="50" />*@
                            <br /><span>Reference</span>

                        </div>
                        <canvas id="Ref"></canvas>
                    </div>
                    <div class="chart-container col-lg-3 col-md-3 col-sm-6 col-xs-12">
                        <div class="form-group align-center">
                            @*<img src="../assets/images/TeleHealthIcon/Pressure.png" class="" width="50" height="50" />*@
                            <br /><span>Spot Check</span>

                        </div>
                        <canvas id="Spot"></canvas>
                    </div>
                    <div class="chart-container col-lg-3 col-md-3 col-sm-6 col-xs-12">
                        <div class="form-group align-center">
                            @*<img src="../assets/images/TeleHealthIcon/BMI.png" class="" width="50" height="50" />*@
                            <br /><span>Supervision</span>

                        </div>
                        <canvas id="Sup"></canvas>
                    </div>
                    <div class="chart-container col-lg-3 col-md-3 col-sm-6 col-xs-12">
                        <div class="form-group align-center">
                            @*<img src="../assets/images/TeleHealthIcon/BMI.png" class="" width="50" height="50" />*@
                            <br /><span>Survey</span>

                        </div>
                        <canvas id="Sur"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section VendorScripts{
    <script src="../../../assets/vendor/jquery-steps/jquery.steps.js"></script> <!-- JQuery Steps Plugin Js -->
    <script src="../../../assets/vendor/dropify/js/dropify.min.js"></script>
    <script src="../../../assets/bundles/mainscripts.bundle.js"></script>
    <script type="text/javascript">
        $(function () {
            var length = $('#parent').children().length;
            for (i = length; i > 1; i--) {
                var child = $('#parent').children()[i - 1];
                $(child).hide();
            };
            var clength = $('#clientParent').children().length;
            for (i = clength; i > 1; i--) {
                var cChild = $('#clientParent').children()[i - 1];
                $(cChild).hide();
            };
            var slength = $('#staffParent').children().length;
            for (i = slength; i > 1; i--) {
                var schild = $('#staffParent').children()[i - 1];
                $(schild).hide();
            };
            $('#showmore').on('click', function ()
            {
                var length = $('#parent').children().length;
                for (i = length; i > 1; i--)
                {
                    var child = $('#parent').children()[i - 1];
                    $(child).toggle();
                }
            });

            $('#clientshow').on('click', function () {
                var length = $('#clientParent').children().length;
                for (i = length; i > 1; i--) {
                    var child = $('#clientParent').children()[i - 1];
                    $(child).toggle();
                }
            });
            $('#staffshow').on('click', function () {
                var length = $('#staffParent').children().length;
                for (i = length; i > 1; i--) {
                    var child = $('#staffParent').children()[i - 1];
                    $(child).toggle();
                }
            });

            var Color = [
                'rgba(40, 167, 69, 1)',
                'rgba(255, 193, 7, 1)',
                'rgba(220, 53, 69, 1)',
                'rgba(0, 123, 255, 1)'
                //'rgba(73,112,182,1)',
                //'rgba(238, 124, 49, 1)',
                //'rgba(165, 165, 165, 1)',
                //'rgba(255, 193, 14, 1)'
            ];
            var clientColor = [
                'rgba(255, 193, 7, 1)',
                'rgba(40, 167, 69, 1)',
                'rgba(220, 53, 69, 1)',
                'rgba(0, 123, 255, 1)'
                //'rgba(73,112,182,1)',
                //'rgba(238, 124, 49, 1)',
                //'rgba(165, 165, 165, 1)',
                //'rgba(255, 193, 14, 1)'
            ];
            var trackerColor = [
                'rgba(255, 193, 7, 1)',
                'rgba(40, 167, 69, 1)',
                'rgba(220, 53, 69, 1)',
                'rgba(0, 123, 255, 1)',
                'rgba(73,112,182,1)'
                //'rgba(238, 124, 49, 1)',
                //'rgba(165, 165, 165, 1)',
                //'rgba(255, 193, 14, 1)'
            ];
        var chartTele = "Tele";
        var chartCoag = "Coag";
        var chartPressure = "Pressure";
        var chartBMI = "BMI";
        var chartBodyTemp = "BodyTemp";
        var chartBowel  = "Bowel";
        var chartEye  = "Eye";
        var chartFood  = "Food";
        var chartHeart  = "Heart";
        var chartOxygen  = "Oxygen";
        var chartPain  = "Pain";
        var chartPulse  = "Pulse";
        var chartSeizure  = "Seizure";
        var chartWound = "Wound";
            var chartClient = "ClientMetrics";
            var chartLog = "LogAudit";
            var chartMed = "MedAudit";
            var chartComp = "Complain";
            var chartVoice = "Voice";
            var chartProg = "Program";
            var chartMgt = "MgtVisit";
            var chartWatch = "ServiceWatch";
                var chartStaff = "StaffMetrics";
                var chartAdl = "Adl";
                var chartKey = "Key";
                var chartMedC = "Med";
                var chartOne = "One";
                var chartRef = "Ref";
                var chartSpot = "Spot";
                var chartSup = "Sup";
            var chartSur = "Sur";
            var chartTrackM = "AdlTracker";
            var chartTrackW = "AdlWeekly";
            var chartTrackD = "AdlDaily";
            var ctxTrackM = document.getElementById(chartTrackM).getContext('2d');
            var ctxTrackW = document.getElementById(chartTrackW).getContext('2d');
            var ctxTrackD = document.getElementById(chartTrackD).getContext('2d');

            const trackM = {
                labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Months.ToList())),
                datasets: [
                    {
                        label: "ONTIME",
                        data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.LiveTrackerM.Where(s => s.Key=="ONTIME").FirstOrDefault().Value.Select(s => s.Value).ToList())),
                        fill: false,
                        borderColor: 'rgba(40, 167, 69, 1)',
                        tension: 0.1
                    },
                    {
                        label: "EARLY",
                        data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.LiveTrackerM.Where(s => s.Key == "EARLY").FirstOrDefault().Value.Select(s => s.Value).ToList())),
                        fill: false,
                        borderColor: 'rgba(0, 123, 255, 1)',
                        tension: 0.1
                    },
                    {
                        label: "MILD",
                        data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.LiveTrackerM.Where(s => s.Key == "MILD").FirstOrDefault().Value.Select(s => s.Value).ToList())),
                        fill: false,
                        borderColor: 'rgba(255, 193, 7, 1)',
                        tension: 0.1
                    },
                    {
                        label:"LATE",
                        data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.LiveTrackerM.Where(s => s.Key == "LATE").FirstOrDefault().Value.Select(s=>s.Value).ToList())),
                        fill: false,
                        borderColor: 'rgba(220, 53, 69, 1)',
                        tension: 0.1
                    },
                    {
                        label: "MISSED",
                        data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.LiveTrackerM.Where(s => s.Key == "MISSED").FirstOrDefault().Value.Select(s => s.Value).ToList())),
                        fill: false,
                        borderColor: 'rgba(73,112,182,1)',
                        tension: 0.1
                    }
                ]
            };
            const trackW = {
                labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Days.ToList())),
                datasets: [
                    {
                        label: "ONTIME",
                        data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.LiveTrackerW.Where(s => s.Key=="ONTIME").FirstOrDefault().Value.Select(s => s.Value).ToList())),
                        fill: false,
                        borderColor: 'rgba(40, 167, 69, 1)',
                        tension: 0.1
                    },
                    {
                        label: "EARLY",
                        data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.LiveTrackerW.Where(s => s.Key == "EARLY").FirstOrDefault().Value.Select(s => s.Value).ToList())),
                        fill: false,
                        borderColor: 'rgba(0, 123, 255, 1)',
                        tension: 0.1
                    },
                    {
                        label: "MILD",
                        data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.LiveTrackerW.Where(s => s.Key == "MILD").FirstOrDefault().Value.Select(s => s.Value).ToList())),
                        fill: false,
                        borderColor: 'rgba(255, 193, 7, 1)',
                        tension: 0.1
                    },
                    {
                        label:"LATE",
                        data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.LiveTrackerW.Where(s => s.Key == "LATE").FirstOrDefault().Value.Select(s=>s.Value).ToList())),
                        fill: false,
                        borderColor: 'rgba(220, 53, 69, 1)',
                        tension: 0.1
                    },
                    {
                        label: "MISSED",
                        data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.LiveTrackerW.Where(s => s.Key == "MISSED").FirstOrDefault().Value.Select(s => s.Value).ToList())),
                        fill: false,
                        borderColor: 'rgba(73,112,182,1)',
                        tension: 0.1
                    }
                ]
            };
            const trackD = {
                labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Types.ToList())),
                datasets: [
                    {
                        label: "ONTIME",
                        data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.LiveTrackerD.Where(s => s.Key=="ONTIME").FirstOrDefault().Value.Select(s => s.Value).ToList())),
                        fill: false,
                        borderColor: 'rgba(40, 167, 69, 1)',
                        tension: 0.1
                    },
                    {
                        label: "EARLY",
                        data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.LiveTrackerD.Where(s => s.Key == "EARLY").FirstOrDefault().Value.Select(s => s.Value).ToList())),
                        fill: false,
                        borderColor: 'rgba(0, 123, 255, 1)',
                        tension: 0.1
                    },
                    {
                        label: "MILD",
                        data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.LiveTrackerD.Where(s => s.Key == "MILD").FirstOrDefault().Value.Select(s => s.Value).ToList())),
                        fill: false,
                        borderColor: 'rgba(255, 193, 7, 1)',
                        tension: 0.1
                    },
                    {
                        label:"LATE",
                        data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.LiveTrackerD.Where(s => s.Key == "LATE").FirstOrDefault().Value.Select(s=>s.Value).ToList())),
                        fill: false,
                        borderColor: 'rgba(220, 53, 69, 1)',
                        tension: 0.1
                    },
                    {
                        label: "MISSED",
                        data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.LiveTrackerD.Where(s => s.Key == "MISSED").FirstOrDefault().Value.Select(s => s.Value).ToList())),
                        fill: false,
                        borderColor: 'rgba(73,112,182,1)',
                        tension: 0.1
                    }
                ]
            };
                var ctxStaff = document.getElementById(chartStaff).getContext('2d');
                var ctxAdl = document.getElementById(chartAdl).getContext('2d');
                var ctxKey = document.getElementById(chartKey).getContext('2d');
                var ctxMedC = document.getElementById(chartMedC).getContext('2d');
                var ctxOne = document.getElementById(chartOne).getContext('2d');
                var ctxRef = document.getElementById(chartRef).getContext('2d');
                var ctxSpot = document.getElementById(chartSpot).getContext('2d');
                var ctxSup = document.getElementById(chartSup).getContext('2d');
                var ctxSur = document.getElementById(chartSur).getContext('2d');
            var ctxClient = document.getElementById(chartClient).getContext('2d');
            var ctxLog = document.getElementById(chartLog).getContext('2d');
            var ctxMed = document.getElementById(chartMed).getContext('2d');
            var ctxComp = document.getElementById(chartComp).getContext('2d');
            var ctxVoice = document.getElementById(chartVoice).getContext('2d');
            var ctxProg = document.getElementById(chartProg).getContext('2d');
            var ctxMgt = document.getElementById(chartMgt).getContext('2d');
            var ctxWatch = document.getElementById(chartWatch).getContext('2d');

            var staff = {
                labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.StaffMatrix.Select(s => s.Key).ToList())),
                datasets: [{
                    label: "Chart",
                    backgroundColor: clientColor,
                    bordercolor: clientColor,
                    borderWidth: 0,
                    data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.StaffMatrix.Select(s => s.Value).ToList()))
                }]
                };
            var adl = {
                labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.AdlObs.Select(s => s.Key).ToList())),
                datasets: [{
                    label: "Chart",
                    backgroundColor: clientColor,
                    bordercolor: clientColor,
                    borderWidth: 0,
                    data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.AdlObs.Select(s => s.Value).ToList()))
                }]
            };
            var key = {
                labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.KeyWorker.Select(s => s.Key).ToList())),
                datasets: [{
                    label: "Chart",
                    backgroundColor: clientColor,
                    bordercolor: clientColor,
                    borderWidth: 0,
                    data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.KeyWorker.Select(s => s.Value).ToList()))
                }]
            };
            var medcomp = {
                labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.MedComp.Select(s => s.Key).ToList())),
                datasets: [{
                    label: "Chart",
                    backgroundColor: clientColor,
                    bordercolor: clientColor,
                    borderWidth: 0,
                    data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.MedComp.Select(s => s.Value).ToList()))
                }]
            };
            var one = {
                labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.OneToOne.Select(s => s.Key).ToList())),
                datasets: [{
                    label: "Chart",
                    backgroundColor: clientColor,
                    bordercolor: clientColor,
                    borderWidth: 0,
                    data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.OneToOne.Select(s => s.Value).ToList()))
                }]
            };
            var refs = {
                labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Reference.Select(s => s.Key).ToList())),
                datasets: [{
                    label: "Chart",
                    backgroundColor: clientColor,
                    bordercolor: clientColor,
                    borderWidth: 0,
                    data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Reference.Select(s => s.Value).ToList()))
                }]
            };
            var spot = {
                labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.SpotCheck.Select(s => s.Key).ToList())),
                datasets: [{
                    label: "Chart",
                    backgroundColor: clientColor,
                    bordercolor: clientColor,
                    borderWidth: 0,
                    data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.SpotCheck.Select(s => s.Value).ToList()))
                }]
            };
            var superv = {
                labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Supervision.Select(s => s.Key).ToList())),
                datasets: [{
                    label: "Chart",
                    backgroundColor: clientColor,
                    bordercolor: clientColor,
                    borderWidth: 0,
                    data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Supervision.Select(s => s.Value).ToList()))
                }]
            };
            var survey = {
                labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Survey.Select(s => s.Key).ToList())),
                datasets: [{
                    label: "Chart",
                    backgroundColor: clientColor,
                    bordercolor: clientColor,
                    borderWidth: 0,
                    data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Survey.Select(s => s.Value).ToList()))
                }]
                };
            //Client Matrix
            var client = {
                labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ClientMatrix.Select(s => s.Key).ToList())),
                datasets: [{
                    label: "Chart",
                    backgroundColor: clientColor,
                    bordercolor: clientColor,
                    borderWidth: 0,
                    data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ClientMatrix.Select(s => s.Value).ToList()))
                }]
            };
            var log = {
                labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.LogAudit.Select(s => s.Key).ToList())),
                datasets: [{
                    label: "Chart",
                    backgroundColor: clientColor,
                    borderColor: clientColor,
                    borderWidth: 0,
                    data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.LogAudit.Select(s => s.Value).ToList()))
                }]
            };
            var med = {
                labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.MedAudit.Select(s => s.Key).ToList())),
                datasets: [{
                    label: "Chart",
                    backgroundColor: clientColor,
                    borderColor: clientColor,
                    borderWidth: 0,
                    data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.MedAudit.Select(s => s.Value).ToList()))
                }]
            };
            var comp = {
                labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Complain.Select(s => s.Key).ToList())),
                datasets: [{
                    label: "Chart",
                    backgroundColor: clientColor,
                    borderColor: clientColor,
                    borderWidth: 0,
                    data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Complain.Select(s => s.Value).ToList()))
                }]
            };
            var voice = {
                labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Voice.Select(s => s.Key).ToList())),
                datasets: [{
                    label: "Chart",
                    backgroundColor: clientColor,
                    borderColor: clientColor,
                    borderWidth: 0,
                    data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Voice.Select(s => s.Value).ToList()))
                }]
            };
            var prog = {
                labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Program.Select(s => s.Key).ToList())),
                datasets: [{
                    label: "Chart",
                    backgroundColor: clientColor,
                    borderColor: clientColor,
                    borderWidth: 0,
                    data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Program.Select(s => s.Value).ToList()))
                }]
            };
            var mgt = {
                labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.MgtVisit.Select(s => s.Key).ToList())),
                datasets: [{
                    label: "Chart",
                    backgroundColor: clientColor,
                    borderColor: clientColor,
                    borderWidth: 0,
                    data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.MgtVisit.Select(s => s.Value).ToList()))
                }]
            };
            var watch = {
                labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ServiceWatch.Select(s => s.Key).ToList())),
                datasets: [{
                    label: "Chart",
                    backgroundColor: clientColor,
                    borderColor: clientColor,
                    borderWidth: 0,
                    data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ServiceWatch.Select(s => s.Value).ToList()))
                }]
            };
            var ctxTele = document.getElementById(chartTele).getContext('2d');
            var ctxCoag = document.getElementById(chartCoag).getContext('2d');
            var ctxPressure = document.getElementById(chartPressure).getContext('2d');
            var ctxBMI = document.getElementById(chartBMI).getContext('2d');
            var ctxTemp = document.getElementById(chartBodyTemp).getContext('2d');
            var ctxBowel = document.getElementById(chartBowel).getContext('2d');
            var ctxEye = document.getElementById(chartEye).getContext('2d');
            var ctxFood = document.getElementById(chartFood).getContext('2d');
            var ctxHeart = document.getElementById(chartHeart).getContext('2d');
            var ctxOxygen = document.getElementById(chartOxygen).getContext('2d');
            var ctxPain = document.getElementById(chartPain).getContext('2d');
            var ctxPulse = document.getElementById(chartPulse).getContext('2d');
            var ctxSeizure = document.getElementById(chartSeizure).getContext('2d');
            var ctxWound = document.getElementById(chartWound).getContext('2d');
            var tele = {
            labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.TeleHealth.Select(s => s.Key).ToList())),
            datasets: [{
                label: "Chart",
                backgroundColor: Color,
                borderColor: Color,
                borderWidth: 0,
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.TeleHealth.Select(s => s.Value).ToList()))
            }]
        };
            var coag = {
            labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.BloodCoag.Select(s => s.Key).ToList())),
            datasets: [{
                label: "Chart",
                backgroundColor: Color,
                borderColor: Color,
                borderWidth: 0,
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.BloodCoag.Select(s => s.Value).ToList()))
            }]
        };
            var pressure = {
            labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Pressure.Select(s => s.Key).ToList())),
            datasets: [{
                label: "Chart",
                backgroundColor: Color,
                borderColor: Color,
                borderWidth: 0,
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Pressure.Select(s => s.Value).ToList()))
            }]
            };
            var bmi = {
            labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.BMI.Select(s => s.Key).ToList())),
            datasets: [{
                label: "Chart",
                backgroundColor: Color,
                borderColor: Color,
                borderWidth: 0,
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.BMI.Select(s => s.Value).ToList()))
            }]
            };
            var temp = {
            labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Body.Select(s => s.Key).ToList())),
            datasets: [{
                label: "Chart",
                backgroundColor: Color,
                borderColor: Color,
                borderWidth: 0,
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Body.Select(s => s.Value).ToList()))
            }]
            };
            var bowel = {
            labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Bowel.Select(s => s.Key).ToList())),
            datasets: [{
                label: "Chart",
                backgroundColor: Color,
                borderColor: Color,
                borderWidth: 0,
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Bowel.Select(s => s.Value).ToList()))
            }]
            };
            var eye = {
            labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.EyeHealth.Select(s => s.Key).ToList())),
            datasets: [{
                label: "Chart",
                backgroundColor: Color,
                borderColor: Color,
                borderWidth: 0,
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.EyeHealth.Select(s => s.Value).ToList()))
            }]
            };
            var food = {
            labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Food.Select(s => s.Key).ToList())),
            datasets: [{
                label: "Chart",
                backgroundColor: Color,
                borderColor: Color,
                borderWidth: 0,
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Food.Select(s => s.Value).ToList()))
            }]
            };
            var heart = {
            labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Heart.Select(s => s.Key).ToList())),
            datasets: [{
                label: "Chart",
                backgroundColor: Color,
                borderColor: Color,
                borderWidth: 0,
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Heart.Select(s => s.Value).ToList()))
            }]
            };
            var oxygen = {
            labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Oxygen.Select(s => s.Key).ToList())),
            datasets: [{
                label: "Chart",
                backgroundColor: Color,
                borderColor: Color,
                borderWidth: 0,
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Oxygen.Select(s => s.Value).ToList()))
            }]
        };
            var pain = {
            labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Pain.Select(s => s.Key).ToList())),
            datasets: [{
                label: "Chart",
                backgroundColor: Color,
                borderColor: Color,
                borderWidth: 0,
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Pain.Select(s => s.Value).ToList()))
            }]
            };
            var pulse = {
            labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Pulse.Select(s => s.Key).ToList())),
            datasets: [{
                label: "Chart",
                backgroundColor: Color,
                borderColor: Color,
                borderWidth: 0,
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Pulse.Select(s => s.Value).ToList()))
            }]
                };
            var seizure = {
            labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Seizure.Select(s => s.Key).ToList())),
            datasets: [{
                label: "Chart",
                backgroundColor: Color,
                borderColor: Color,
                borderWidth: 0,
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Seizure.Select(s => s.Value).ToList()))
            }]
            };
            var wound = {
            labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Wound.Select(s => s.Key).ToList())),
            datasets: [{
                label: "Chart",
                backgroundColor: Color,
                borderColor: Color,
                borderWidth: 0,
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Wound.Select(s => s.Value).ToList()))
            }]
        };
        var options = {
            maintainAspectRatio: false,
            scales: {
                yAxes: [{
                    ticks: {
                        min: 0,
                        beginAtZero: true
                    },
                    gridLines: {
                        display: true,
                        color: "rgba(255,99,164,0.2)"
                    }
                }]
            }
            };
            var hidelabel = {
                legend: {
                    display: false //This will do the task
                }
                };
            var TrackerM = new Chart(ctxTrackM, {
                data: trackM,
                type: 'line'

            });
            var TrackerW = new Chart(ctxTrackW, {
                data: trackW,
                type: 'line'

            });
            var TrackerD = new Chart(ctxTrackD, {
                data: trackD,
                type: 'line'

            });
            var Staff = new Chart(ctxStaff, {
                    options: options,
                    data: staff,
                    type: 'pie'

                });

                var Adl = new Chart(ctxAdl, {
                    options: hidelabel,
                    data: adl,
                    type: 'pie'

                });
                var Key = new Chart(ctxKey, {
                    options: hidelabel,
                    data: key,
                    type: 'pie'

                });
                var Comp = new Chart(ctxMedC, {
                    options: hidelabel,
                    data: medcomp,
                    type: 'pie'

                });
                var One = new Chart(ctxOne, {
                    options: hidelabel,
                    data: one,
                    type: 'pie'

                });
                var Ref = new Chart(ctxRef, {
                    options: hidelabel,
                    data: refs,
                    type: 'pie'

                });
                var Spot = new Chart(ctxSpot, {
                    options: hidelabel,
                    data: spot,
                    type: 'pie'

                });
                var Super = new Chart(ctxSup, {
                    options: hidelabel,
                    data: superv,
                    type: 'pie'

                });
                var Survey = new Chart(ctxSur, {
                    options: hidelabel,
                    data: survey,
                    type: 'pie'

                });
            var Client = new Chart(ctxClient, {
                options: options,
                data: client,
                type: 'pie'

            });
            var Log = new Chart(ctxLog, {
                options: hidelabel,
                data: log,
                type: 'pie'

            });
            var Med = new Chart(ctxMed, {
                options: hidelabel,
                data: med,
                type:'pie'

            });
            var Comp = new Chart(ctxComp, {
                options: hidelabel,
                data: comp,
                type: 'pie'

            });
            var Voice = new Chart(ctxVoice, {
                options: hidelabel,
                data: voice,
                type:'pie'

            });
            var Prog = new Chart(ctxProg, {
                options: hidelabel,
                data: prog,
                type:'pie'

            });
            var Mgt = new Chart(ctxMgt, {
                options: hidelabel,
                data: mgt,
                type:'pie'

            });
            var Watch = new Chart(ctxWatch, {
                options: hidelabel,
                data: watch,
                type: 'pie'

            });
            var Tele = new Chart(ctxTele, {
            options: options,
            data: tele,
            type: 'pie'

            });
            var Coag = new Chart(ctxCoag, {
                options: hidelabel,
                data: coag,
                type:'pie'

            });
            var BMI = new Chart(ctxBMI, {
                options: hidelabel,
                data: bmi,
                type: 'pie'

            });
            var Press = new Chart(ctxPressure, {
                options: hidelabel,
                data: pressure,
                type: 'pie'

            });
            var Body = new Chart(ctxTemp, {
                options: hidelabel,
                data: temp,
                type: 'pie'

            });
            var Bowel = new Chart(ctxBowel, {
                options: hidelabel,
                data: bowel,
                type: 'pie'

            });
            var Eye = new Chart(ctxEye, {
                options: hidelabel,
                data: eye,
                type: 'pie'

            });
            var Food = new Chart(ctxFood, {
                options: hidelabel,
                data: food,
                type: 'pie'

            });
            var Heart = new Chart(ctxHeart, {
                options: hidelabel,
                data: heart,
                type: 'pie'

            });
            var Oxygen = new Chart(ctxOxygen, {
                options: hidelabel,
                data: oxygen,
                type: 'pie'

            });
            var Pain = new Chart(ctxPain, {
                options: hidelabel,
                data: pain,
                type: 'pie'

            });
            var Pulse = new Chart(ctxPulse, {
                options: hidelabel,
                data: pulse,
                type: 'pie'

            });
            var Seizure = new Chart(ctxSeizure, {
                options: hidelabel,
                data: seizure,
                type: 'pie'

            });
            var Wound = new Chart(ctxWound, {
                options: hidelabel,
                data: wound,
                type: 'pie'

            });
});

        var table = $('.datatables').DataTable({
            pageLength: 5,
            lengthMenu: [[5, 10, 20, -1], [5, 10, 20, 'Todos']]
        });
    </script>
}